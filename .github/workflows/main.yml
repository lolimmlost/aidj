name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint
        
      - name: Build project
        run: npm run build
        
      - name: Run unit tests with coverage
        run: npm run test:coverage
        
      - name: Check coverage thresholds
        run: |
          if [ ! -f coverage/lcov.info ]; then
            echo "No coverage report found"
            exit 1
          fi
          
          TOTAL_LINES=$(grep '^SF' coverage/lcov.info | wc -l)
          COVERED_LINES=$(grep '^DA' coverage/lcov.info | grep -v ',0$' | wc -l)
          
          if [ "$TOTAL_LINES" -gt 0 ]; then
            COVERAGE=$(( (COVERED_LINES * 100) / TOTAL_LINES ))
          else
            COVERAGE=0
          fi
          
          echo "Total lines: $TOTAL_LINES"
          echo "Covered lines: $COVERED_LINES"
          echo "Coverage: $COVERAGE%"
          
          if [ "$COVERAGE" -lt 80 ]; then
            echo "Coverage is $COVERAGE% which is below 80% threshold"
            exit 1
          else
            echo "Coverage is $COVERAGE% - meeting threshold"
          fi
        if: always()
        
      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true
        if: success()

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --audit-level high
        continue-on-error: true
        
      - name: Fail on high/critical vulnerabilities
        run: |
          if npm audit --json --audit-level high | jq -e '.auditReport.vulnerabilities.high > 0 or .auditReport.vulnerabilities.critical > 0' > /dev/null 2>&1; then
            echo "High or critical vulnerabilities found!"
            exit 1
          fi
        if: always()

  secret-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Run Gitleaks scan
        uses: gitleaks/gitleaks-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_WORKSPACE: ${{ github.workspace }}
        with:
          config-path: .gitleaks.toml
          verbose: true
          fail-threshold: 0
          report-format: sarif
          report-path: gitleaks.sarif
          paths: |
            src/
            public/
            package.json
            vite.config.ts
            tsconfig.json
          
      - name: Upload Gitleaks results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif
        if: always()